name: jenkins-sonar-integration
on:
 push: 
  branches: 
  - feature/indexpage
 workflow_dispatch:
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    #- name: SonarQube Scan
     # uses: sonarsource/sonarqube-scan-action@master
      #env:
       # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
    #- name: Login to Docker Hub
     # run: | 
      # echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
     
    #- name: build & push
     # run: | 
      # docker build -t "mirzajunaid/company:111" .
       #docker push mirzajunaid/company:111 
#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v2
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ap-south-1   
#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1

#     - name: Build, tag, and push docker image to Amazon ECR
#       env:
#           REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           REPOSITORY: my-ecr-repo
#           IMAGE_TAG: latest
#       run: |
#           docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
#           docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
#     - name: Deploy to Server 1
#       uses: easingthemes/ssh-deploy@main
#       env:
#        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
#        REMOTE_HOST: ${{ secrets.HOST_DNS }}
#        REMOTE_USER: ${{ secrets.USERNAME }}
#        TARGET: .
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@v0.1.10
      with:
         host: ${{ secrets.HOST_DNS }}
         username: ${{ secrets.USERNAME }}
         key: ${{ secrets.EC2_SSH_KEY }}
         port: 22
         script: |
          curl -sSL https://get.docker.com | bash
          
      
      
     
    
    
